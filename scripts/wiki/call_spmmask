#!/bin/bash
#$ -S /bin/bash
#$ -cwd
#$ -j Y
#$ -q short.q@jupiter
#$ -V

#---------------------------------------------------------------------------------------------------------
# Create help text
function Usage {
		cat <<USAGE

---------------------------------------------------------------------------------------------------
call_spmmask

Creates an initial brain mask based on the second inversion magnitude image. This can guide the re-
moval of noise using call_rmbackground, which enhances the result from CAT12. Uses spmBrainMask and 
myGRE_BrainMask, which should be located in the utils-folder.

Args:
 -s <SPM_PATH>  path to SPM; should contain CAT12 in toolbox directory
 -l <LOG_PATH>	path to working directory, defaults to DIR_LOGS
 <input image>  input image. Can either be *.nii.gz or *.nii image. In the case of the former,
                new *.nii-file will be created alongside of the *.nii.gz file, as SPM does
                not like *.nii.gz files.
 <output image>	name of output image, including directory
 <delete tmp> 	delete intermediate files (yes/y|no/n)

Usage:
 call_spmmask inv2.nii.gz mask_inv2 y

---------------------------------------------------------------------------------------------------

USAGE
		exit 1
}

if [[ $# -lt 1 ]] ; then
	Usage >&2
	exit 1
fi

# Check for subject & session flags
while getopts l:s: argument
do
  case ${argument} in
    l)  LOG=${OPTARG}
            ;;
    s)  SPM=${OPTARG}
            ;;
  esac
done

INPUT=${@:$OPTIND:1}
OUTPUT=${@:$OPTIND+1:1}
RM=${@:$OPTIND+2:1}

#-----------------------------------------------------------------------------
# Define default LOG-path
if [[ -z ${LOG} ]]; then
	if [[ -z ${DIR_LOGS} ]]; then
		LOG_DIR=${PWD}
	else
		LOG_DIR=${DIR_LOGS}
	fi
else
	LOG_DIR=${LOG}
fi

if [[ ! -d ${LOG_DIR} ]]; then
	mkdir -p ${LOG_DIR}
fi

#-----------------------------------------------------------------------------
# Define default SPM-path
if [[ -z ${SPM} ]]; then
	if [[ -z ${SPM_PATH} ]]; then
		echo "ERROR: SPM_PATH-variable is empty. Either define it, or specify an SPM-path with \"-s <path/to/spm>\""
		exit 1
	else
		SPM_PATH=${SPM_PATH}
	fi
else
	SPM_PATH=${SPM}
fi

#-----------------------------------------------------------------------------
# Define function to create SPM-compatible script with
function make_script {

	(
	echo "%-----------------------------------------------------------------------------"
	echo "% Created on `date`. spmBrainMask on INV-2 image"
	echo ""
	echo "clear;"
	echo "addpath(genpath('${DIR_SCRIPTS}/bin/utils'));"
	echo "addpath(genpath('${SPM_PATH}'));"
	echo ""
	echo "niifile = '${1}';"
	echo "maskfile=spmBrainMask(niifile);"
	echo ""
	echo "exit;"
	) >> ${2}

}

#-----------------------------------------------------------------------------
# Get extension from input file
function fetch_extension {
	fname=$(basename -- "${INPUT}")
	ext="${fname##*.}"
	filename="${fname%.*}"
	echo $ext
}

ext=`fetch_extension ${INPUT}`
if [[ ${ext} == "gz" ]]; then
	in_file=$(dirname ${INPUT})/$(basename ${INPUT} .gz)
	gunzip -c ${INPUT} > ${in_file}
else
	in_file=${INPUT}
fi

# if file specified is in current directory, add entire path
if [[ ${in_file} != *"/"* ]]; then
	in_file=${PWD}/$(basename ${in_file})
fi

#-----------------------------------------------------------------------------
# Create new script
new_script=$(dirname ${in_file})/spm_mask.m
if [[ -f ${new_script} ]]; then
	rm -r ${new_script}
fi

if [[ ! -d $(dirname ${OUTPUT}) ]]; then
	mkdir -p $(dirname ${OUTPUT})
fi

mask_img=`find $(dirname ${in_file}) -type f -name "mask*" 2>/dev/null`
if [[ -z ${mask_img} ]]; then

	make_script ${in_file} ${new_script}

	cd $(dirname ${new_script})

	if [[ ${PLACE} == "SPINOZA" ]]; then
		skip_lines=65
	else
		skip_lines=0
	fi

	cd $(dirname ${new_script})
	matlab -nodesktop -nosplash -nodisplay -r "$(basename ${new_script} .m); quit" | tail -n +${skip_lines} # suppress intro text

	if [[ $? -ne 0 ]]; then
		echo "ERROR: matlab exited with non-zero status"
		exit 1
	fi

	cd ${OLDPWD}

fi

if [[ ${RM} == "y" ]]; then
	rm -r $(dirname ${in_file})/c*$(basename ${in_file}) *.mat 2>/dev/null
fi

# Convert SPM's .nii-files to .nii.gz if the input file was nii.gz
if [[ ${ext} == "gz" ]]; then
	mask_img=`find $(dirname ${in_file}) -type f -name "mask*" 2>/dev/null`
	if [[ ! -z ${mask_img} ]]; then
		gzip -c ${mask_img} > ${OUTPUT} 2>/dev/null

		# set qformcode to 1 (prefered by nighres)
		if [[ `fslval ${OUTPUT} qform_code` -ne 1 ]]; then
			fslorient -setqformcode 1 ${OUTPUT}
		fi
	fi
	rm -r ${in_file}
fi